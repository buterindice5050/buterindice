{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PrettoSlider","withStyles","root","color","height","marginTop","width","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","useStyles","makeStyles","theme","minWidth","display","alignItems","wrapper","margin","spacing","position","selfAlign","bullet","transform","playGame","props","win","palette","getContrastText","fontWeight","fontSize","title","result","gameInfo","padding","pos","marginBottom","extendedIcon","marginRight","paper","avatar","winner","fabProgress","green","top","zIndex","bet","textAlign","diceAddress","EthLogo","classes","className","Card","CardContent","Typography","gutterBottom","balance","gamesPlayed","Fab","aria-label","onClick","handleButtonClick","icon","ethereumIcon","loading","CircularProgress","size","TextField","id","InputProps","input","startAdornment","InputAdornment","style","onChange","e","setBet","target","value","label","variant","min","max","Button","disableRipple","disabled","payWithMetamask","total","winners","losers","data","chartData","valueField","argumentField","visible","App","useState","setGamesPlayed","setWinners","setlosers","setBalance","setChartData","setWin","setMax","setTotal","setLoading","success","a","provider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","getAddress","userAddress","params","gasPrice","gasLimit","from","to","utils","parseUnits","String","toHexString","send","fetchGamesPlayed","contract","Contract","Dice","abi","totalGamesPlayed","totalWinners","totalLosers","console","log","useEffect","request","method","played","getBalance","wei","parseFloat","parseInt","group","on","sender","event","formatUnits","confirm","requestAccount","alert","newValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32ce79ae.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { ethers } from \"ethers\";\nimport { Icon } from \"@iconify/react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport { Chart, PieSeries, Legend } from \"@devexpress/dx-react-chart-material-ui\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport ethereumIcon from \"@iconify-icons/mdi/ethereum\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Dice from \"./artifacts/contracts/ButerinDice.sol/ButerinDice.json\";\n\nconst log = (w) => alert(\"LOG: \" + JSON.stringify(w));\nconst PrettoSlider = withStyles({\n    root: {\n        color: \"#52af77\",\n        height: 12,\n        marginTop: 12,\n        width: \"80%\",\n    },\n    thumb: {\n        height: 44,\n        width: 44,\n        backgroundColor: \"#fff\",\n        border: \"2px solid currentColor\",\n        marginTop: -14,\n        marginLeft: -12,\n        \"&:focus, &:hover, &$active\": {\n            boxShadow: \"inherit\",\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: \"calc(-50% + 4px)\",\n    },\n    track: {\n        height: 16,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 16,\n        borderRadius: 4,\n    },\n})(Slider);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n        display: 'flex',\n            alignItems: 'center',\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n        selfAlign: \"center\"\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    playGame: {\n        margin: theme.spacing(4),\n        color: (props) => (props.win ? theme.palette.getContrastText(\"#00ab12\") : theme.palette.getContrastText(\"#ff0000\")),\n        backgroundColor: (props) => (props.win ? \"#00ab12\" : \"#ff0000\"),\n        fontWeight: \"bold\",\n        fontSize: 30,\n    },\n    title: {\n        fontSize: 14,\n        fontWeight: \"bold\",\n    },\n    result: {\n        fontSize: 24,\n        fontWeight: \"bold\",\n    },\n    gameInfo: {\n        fontSize: 16,\n        padding: \"1em\",\n        fontWeight: \"bold\",\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    margin: {\n        margin: theme.spacing(2),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    paper: {\n        margin: \"0 auto\",\n        width: theme.spacing(32),\n        height: \"300px\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        color: theme.palette.getContrastText(\"#00ab12\"),\n        backgroundColor: \"#00ab12\",\n    },\n    winner: {\n        margin: theme.spacing(1),\n        color: (props) => (props.win ? theme.palette.getContrastText(\"#00ab12\") : theme.palette.getContrastText(\"#ff0000\")),\n        backgroundColor: (props) => (props.win ? \"#00ab12\" : \"#ff0000\"),\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    bet: {\n        textAlign: \"center\",\n        fontSize: 20,\n        fontWeight: \"bold\",\n    },\n}));\n//import Token from './artifacts/contracts/Token.sol/Token.json'\n//const tokenAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\"\nconst diceAddress = \"0x286DE95424861F419Ab9647E978D53385854428C\";\n\nconst weiToEth = (wei) => Web3.utils.fromWei(String(wei), \"ether\");\n\nconst EthLogo = (props) => {\n    const classes = useStyles(props);\n    return (\n        <div className=\"logo-wrapper\">\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Buterin Dice\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Contract ETH Balance: {props.balance}\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Current MAX Bet: {props.balance / 5}\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Total games played: {props.gamesPlayed}\n                    </Typography>\n                    <div className={classes.wrapper}>\n                    <Fab aria-label=\"save\" color=\"primary\" onClick={props.handleButtonClick} className={classes.winner} aria-label=\"add\">\n                        <Icon icon={ethereumIcon} height={120} />\n                        {props.loading && <CircularProgress size={68} className={classes.fabProgress} />}\n                    </Fab>\n                    </div>\n                    <TextField\n                        id=\"outlined-basic\"\n                        className={classes.margin}\n                        InputProps={{\n                            classes: {\n                                input: classes.bet,\n                            },\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    {props.bet <= props.balance / 20 && <span style={{ fontSize: \"38px\" }}>😐</span>}\n                                    {props.bet > props.balance / 20 && props.bet <= props.balance / 10 && <span style={{ fontSize: \"38px\" }}>😀</span>}\n                                    {props.bet > props.balance / 10 && props.bet != props.balance / 5 && <span style={{ fontSize: \"38px\" }}>🤑</span>}\n                                    {props.bet == props.balance / 5 && <span style={{ fontSize: \"38px\" }}>🤯</span>}\n                                </InputAdornment>\n                            ),\n                        }}\n                        onChange={(e) => props.setBet(e, e.target.value)}\n                        value={props.bet}\n                        label=\"Place your bet\"\n                        variant=\"outlined\"\n                    />\n                    <PrettoSlider onChange={props.setBet} value={props.bet} min={props.min} max={props.max} />\n                    <Button disableRipple disabled={props.bet > props.balance / 5} onClick={() => props.payWithMetamask()} size=\"large\" variant=\"contained\" color=\"primary\" className={classes.playGame}>\n                        {\"Play Game\"}\n                    </Button>\n\n                    <Typography className={classes.result} color=\"textSecondary\" gutterBottom>\n                        {props.win ? `You won 🥳👍${props.total} ETH` : `You lost 😔 ${props.total} ETH`}\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Total winners: {props.winners}\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Total losers: {props.losers}\n                    </Typography>\n                </CardContent>\n            </Card>\n            <div className={\"\"}>\n                <Chart data={props.chartData}>\n                    <PieSeries valueField=\"total\" argumentField=\"group\" />\n                    <Legend visible={true} />\n                </Chart>\n            </div>\n        </div>\n    );\n};\n\nfunction App() {\n    const [gamesPlayed, setGamesPlayed] = useState();\n    const [winners, setWinners] = useState();\n    const [losers, setlosers] = useState();\n    const [balance, setBalance] = useState(0);\n    const [chartData, setChartData] = useState([]);\n    const [win, setWin] = useState(true);\n    const [min, setMin] = useState(0);\n    const [max, setMax] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [bet, setBet] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    const payWithMetamask = async () => {\n        let provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const userAddress = await signer.getAddress();\n        const params = [\n            {\n                //gasLimit: \"0x2710\",\n                //gasPrice: ethers.utils.parseUnits(\"1.0\", \"gwei\").toHexString(),\n                gasPrice: \"0x186A0\",\n                gasLimit: \"0x186A0\",\n                from: userAddress,\n                to: diceAddress,\n                value: ethers.utils.parseUnits(String(bet), \"wei\").toHexString(),\n            },\n        ];\n        const transactionHash = await provider.send(\"eth_sendTransaction\", params);\n            setLoading(true);\n    };\n\n    const handleChange = (event, newValue) => {\n        setBet(newValue);\n    };\n\n    const handleButtonClick = () => {\n        if (!loading) {\n            setBet(max)\n        }\n    };\n\n    useEffect(() => {\n        async function requestAccount() {\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const played = await fetchGamesPlayed();\n            const wei = await provider.getBalance(diceAddress);\n            setBalance(wei);\n            setMax(parseFloat(wei * 0.2));\n            setGamesPlayed(parseInt(played.gamesPlayed));\n            setWinners(parseInt(played.winners));\n            setlosers(parseInt(played.losers));\n            setChartData([\n                { group: \"losers\", total: played.losers },\n                { group: \"winners\", total: played.winners },\n            ]);\n\n            const contract = new ethers.Contract(diceAddress, Dice.abi, provider);\n            contract.on(\"GameOver\", async (sender, event, winner) => {\n                setLoading(false);\n                let provider = new ethers.providers.Web3Provider(window.ethereum);\n                const signer = provider.getSigner();\n                const userAddress = await signer.getAddress();\n                if (sender === userAddress) {\n                    setWin(winner);\n                    setTotal(ethers.utils.formatUnits(\"\" + event, 18));\n                }\n                const played = await fetchGamesPlayed();\n                const wei = await provider.getBalance(diceAddress);\n                setBalance(wei);\n                setMax(wei * 0.2);\n                setGamesPlayed(parseInt(played.gamesPlayed));\n                setWinners(parseInt(played.winners));\n                setlosers(parseInt(played.losers));\n                setChartData([\n                    { group: \"losers\", total: played.losers },\n                    { group: \"winners\", total: played.winners },\n                ]);\n            });\n        }\n        if (typeof window.ethereum !== \"undefined\") {\n            const agree = window.confirm(\"WARNING: PLAY AT YOUR OWN RISK\");\n\n            if (agree) {\n                requestAccount();\n            } else {\n                alert(\"Thanks for visiting! 👋\");\n            }\n        }\n    }, []);\n\n    async function fetchGamesPlayed() {\n        if (typeof window.ethereum !== \"undefined\") {\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const contract = new ethers.Contract(diceAddress, Dice.abi, provider);\n            try {\n                const gamesPlayed = await contract.totalGamesPlayed();\n                const winners = await contract.totalWinners();\n                const losers = await contract.totalLosers();\n                return {\n                    gamesPlayed: gamesPlayed,\n                    winners: winners,\n                    losers: losers,\n                };\n            } catch (err) {\n                console.log(\"Error: \", err);\n            }\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <EthLogo total={total} win={win} setBet={handleChange} bet={bet} min={min} max={max} winners={winners} losers={losers} gamesPlayed={gamesPlayed} chartData={chartData} payWithMetamask={payWithMetamask} balance={parseInt(balance)} success={success} loading={loading} handleButtonClick={handleButtonClick} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}