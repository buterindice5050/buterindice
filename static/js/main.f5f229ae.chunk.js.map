{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PrettoSlider","withStyles","root","color","height","marginTop","width","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","useStyles","makeStyles","theme","minWidth","display","alignItems","wrapper","margin","spacing","position","selfAlign","bullet","transform","playGame","props","win","palette","getContrastText","fontWeight","fontSize","title","result","gameInfo","padding","pos","marginBottom","extendedIcon","marginRight","paper","avatar","winner","fabProgress","green","top","zIndex","bet","textAlign","diceAddress","EthLogo","classes","useWindowSize","className","recycle","tweenDuration","Card","CardContent","Typography","gutterBottom","balance","max","Fab","onClick","handleButtonClick","aria-label","icon","ethereumIcon","loading","CircularProgress","size","TextField","id","InputProps","input","startAdornment","InputAdornment","style","onChange","e","setBet","target","value","label","variant","min","Button","disableRipple","disabled","payWithMetamask","total","gamesPlayed","winners","losers","data","chartData","valueField","argumentField","visible","App","useState","setGamesPlayed","setWinners","setlosers","setBalance","setChartData","setWin","setMax","setTotal","setLoading","success","a","provider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","getAddress","userAddress","params","gasPrice","utils","parseUnits","toHexString","gasLimit","gas","from","to","String","send","fetchGamesPlayed","contract","Contract","Dice","abi","totalGamesPlayed","totalWinners","totalLosers","console","log","useEffect","request","method","played","getBalance","wei","parseFloat","parseInt","group","on","sender","event","synth","Tone","toDestination","now","triggerAttackRelease","formatUnits","setTimeout","confirm","requestAccount","alert","newValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5f229ae.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { ethers } from \"ethers\";\nimport { Icon } from \"@iconify/react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport { Chart, PieSeries, Legend } from \"@devexpress/dx-react-chart-material-ui\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport ethereumIcon from \"@iconify-icons/mdi/ethereum\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Slider from \"@material-ui/core/Slider\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\nimport * as Tone from \"tone\";\nimport Dice from \"./artifacts/contracts/ButerinDice.sol/ButerinDice.json\";\n\nconst log = (w) => alert(\"LOG: \" + JSON.stringify(w));\nconst PrettoSlider = withStyles({\n    root: {\n        color: \"#52af77\",\n        height: 12,\n        marginTop: 12,\n        width: \"80%\",\n    },\n    thumb: {\n        height: 44,\n        width: 44,\n        backgroundColor: \"#fff\",\n        border: \"2px solid currentColor\",\n        marginTop: -14,\n        marginLeft: -12,\n        \"&:focus, &:hover, &$active\": {\n            boxShadow: \"inherit\",\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: \"calc(-50% + 4px)\",\n    },\n    track: {\n        height: 16,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 16,\n        borderRadius: 4,\n    },\n})(Slider);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n        selfAlign: \"center\",\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    playGame: {\n        margin: theme.spacing(4),\n        color: (props) => (props.win ? theme.palette.getContrastText(\"#00ab12\") : theme.palette.getContrastText(\"#ff0000\")),\n        backgroundColor: (props) => (props.win ? \"#00ab12\" : \"#ff0000\"),\n        fontWeight: \"bold\",\n        fontSize: 30,\n    },\n    title: {\n        fontSize: 14,\n        fontWeight: \"bold\",\n    },\n    result: {\n        fontSize: 24,\n        fontWeight: \"bold\",\n    },\n    gameInfo: {\n        fontSize: 16,\n        padding: \"1em\",\n        fontWeight: \"bold\",\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    margin: {\n        margin: theme.spacing(2),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    paper: {\n        margin: \"0 auto\",\n        width: theme.spacing(32),\n        height: \"300px\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        color: theme.palette.getContrastText(\"#00ab12\"),\n        backgroundColor: \"#00ab12\",\n    },\n    winner: {\n        margin: theme.spacing(1),\n        color: (props) => (props.win ? theme.palette.getContrastText(\"#00ab12\") : theme.palette.getContrastText(\"#ff0000\")),\n        backgroundColor: (props) => (props.win ? \"#00ab12\" : \"#ff0000\"),\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    bet: {\n        textAlign: \"center\",\n        fontSize: 20,\n        fontWeight: \"bold\",\n    },\n}));\nconst diceAddress = \"0x0f38340755D3CA92e032C2F871C07ECC02393176\";\n//const diceAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nconst EthLogo = (props) => {\n    const classes = useStyles(props);\n    const { width, height } = useWindowSize();\n    return (\n        <div className=\"logo-wrapper\">\n            {props.win ? <Confetti recycle={false} tweenDuration={2500} width={width} height={height} /> : null}\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Buterin Dice\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Contract ETH Balance: {props.balance}\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Current MAX Bet: {props.max}\n                    </Typography>\n                    <div className={classes.wrapper}>\n                        <Fab color=\"primary\" onClick={props.handleButtonClick} className={classes.winner} aria-label=\"add\">\n                            <Icon icon={ethereumIcon} height={120} />\n                            {props.loading && <CircularProgress size={68} className={classes.fabProgress} />}\n                        </Fab>\n                    </div>\n                    <TextField\n                        id=\"outlined-basic\"\n                        className={classes.margin}\n                        InputProps={{\n                            classes: {\n                                input: classes.bet,\n                            },\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    {props.bet <= props.balance / 40 && <span style={{ fontSize: \"38px\" }}>😐</span>}\n                                    {props.bet > props.balance / 40 && props.bet <= props.balance / 30 && <span style={{ fontSize: \"38px\" }}>😀</span>}\n                                    {props.bet > props.balance / 30 && props.bet != props.balance / 10 && <span style={{ fontSize: \"38px\" }}>🤑</span>}\n                                    {props.bet == props.balance / 10 && <span style={{ fontSize: \"38px\" }}>🤯</span>}\n                                </InputAdornment>\n                            ),\n                        }}\n                        onChange={(e) => props.setBet(e, e.target.value)}\n                        value={props.bet}\n                        label=\"Place your bet\"\n                        variant=\"outlined\"\n                    />\n                    <PrettoSlider onChange={props.setBet} value={props.bet} min={props.min} max={props.max} />\n                    <Button disableRipple disabled={props.bet > props.balance / 10} onClick={() => props.payWithMetamask()} size=\"large\" variant=\"contained\" color=\"primary\" className={classes.playGame}>\n                        {\"Play Game\"}\n                    </Button>\n\n                    <Typography className={classes.result} color=\"textSecondary\" gutterBottom>\n                        {props.win ? `You won 🥳👍${props.total} ETH` : `You lost 😔 ${props.total} ETH`}\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Total games played: {props.gamesPlayed}\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Total winners: {props.winners}\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Total losers: {props.losers}\n                    </Typography>\n                </CardContent>\n            </Card>\n            <div className={\"\"}>\n                <Chart data={props.chartData}>\n                    <PieSeries valueField=\"total\" argumentField=\"group\" />\n                    <Legend visible={true} />\n                </Chart>\n            </div>\n        </div>\n    );\n};\n\nfunction App() {\n    const [gamesPlayed, setGamesPlayed] = useState();\n    const [winners, setWinners] = useState();\n    const [losers, setlosers] = useState();\n    const [balance, setBalance] = useState(0);\n    const [chartData, setChartData] = useState([]);\n    const [win, setWin] = useState(false);\n    const [min, setMin] = useState(0);\n    const [max, setMax] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [bet, setBet] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    const payWithMetamask = async () => {\n        let provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const userAddress = await signer.getAddress();\n        const params = [\n            {\n                gasPrice: ethers.utils.parseUnits(\"1.0\", \"gwei\").toHexString(),\n                gasLimit: \"155839\",\n                gas: \"83004\",\n                from: userAddress,\n                to: diceAddress,\n                value: ethers.utils.parseUnits(String(bet), \"wei\").toHexString(),\n            },\n        ];\n        const transactionHash = await provider.send(\"eth_sendTransaction\", params);\n        setLoading(true);\n    };\n\n    const handleChange = (event, newValue) => {\n        setBet(newValue);\n    };\n\n    const handleButtonClick = () => {\n        if (!loading) {\n            setBet(max);\n        }\n    };\n\n    useEffect(() => {\n        async function requestAccount() {\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const played = await fetchGamesPlayed();\n            const wei = await provider.getBalance(diceAddress);\n            setBalance(wei);\n            setMax(parseFloat(wei * 0.1));\n            setGamesPlayed(parseInt(played.gamesPlayed));\n            setWinners(parseInt(played.winners));\n            setlosers(parseInt(played.losers));\n            setChartData([\n                { group: \"losers\", total: played.losers },\n                { group: \"winners\", total: played.winners },\n            ]);\n\n            const contract = new ethers.Contract(diceAddress, Dice.abi, provider);\n            contract.on(\"GameOver\", async (sender, event, winner) => {\n                setLoading(false);\n                let provider = new ethers.providers.Web3Provider(window.ethereum);\n                const signer = provider.getSigner();\n                const userAddress = await signer.getAddress();\n                if (sender === userAddress) {\n    const synth = new Tone.Synth().toDestination();\n    const now = Tone.now();\n                    if (winner) {\n                        setWin(winner);\n                        synth.triggerAttackRelease(\"C4\", \"8n\", now);\n                        synth.triggerAttackRelease(\"E4\", \"8n\", now + 0.25);\n                        synth.triggerAttackRelease(\"G4\", \"8n\", now + 0.5);\n                        synth.triggerAttackRelease(\"C3\", \"8n\", now + 0.75);\n                        synth.triggerAttackRelease(\"E3\", \"8n\", now + 1);\n                        synth.triggerAttackRelease(\"G3\", \"8n\", now + 1.25);\n                        setTotal(ethers.utils.formatUnits(\"\" + event, 18));\n                        setTimeout(() => {\n                            setWin(false);\n                        }, 5000);\n                    } else {\n                        setWin(winner);\n                        synth.triggerAttackRelease(\"G2\", \"8n\", now);\n                        synth.triggerAttackRelease(\"E2\", \"8n\", now + 0.25);\n                        synth.triggerAttackRelease(\"C2\", \"8n\", now + 0.5);\n                    }\n                }\n                const played = await fetchGamesPlayed();\n                const wei = await provider.getBalance(diceAddress);\n                setBalance(wei);\n                setMax(wei * 0.1);\n                setGamesPlayed(parseInt(played.gamesPlayed));\n                setWinners(parseInt(played.winners));\n                setlosers(parseInt(played.losers));\n                setChartData([\n                    { group: \"losers\", total: played.losers },\n                    { group: \"winners\", total: played.winners },\n                ]);\n            });\n        }\n        if (typeof window.ethereum !== \"undefined\") {\n            const agree = window.confirm(\"WARNING: PLAY AT YOUR OWN RISK\");\n\n            if (agree) {\n                requestAccount();\n            } else {\n                alert(\"Thanks for visiting! 👋\");\n            }\n        }\n    }, []);\n\n    async function fetchGamesPlayed() {\n        if (typeof window.ethereum !== \"undefined\") {\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const contract = new ethers.Contract(diceAddress, Dice.abi, provider);\n            try {\n                const gamesPlayed = await contract.totalGamesPlayed();\n                const winners = await contract.totalWinners();\n                const losers = await contract.totalLosers();\n                return {\n                    gamesPlayed: gamesPlayed,\n                    winners: winners,\n                    losers: losers,\n                };\n            } catch (err) {\n                console.log(\"Error: \", err);\n            }\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <EthLogo total={total} win={win} setBet={handleChange} bet={bet} min={min} max={max} winners={winners} losers={losers} gamesPlayed={gamesPlayed} chartData={chartData} payWithMetamask={payWithMetamask} balance={parseInt(balance)} success={success} loading={loading} handleButtonClick={handleButtonClick} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}